-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Parser.y
-----------------------------------------------------------------------------


terminal S_Error is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Prg                                (0)
	Prg -> Decs Stmts                                  (1)
	Decs -> Decs DecE                                  (2)
	Decs -> DecE                                       (3)
	Decs -> ';'                                        (4)
	Stmts -> Stmts StmtE                               (5)
	Stmts -> StmtE                                     (6)
	Stmts -> ';'                                       (7)
	StmtE -> ID '=' Exp ';'                            (8)
	StmtE -> P ID ';'                                  (9)
	StmtE -> R ID ';'                                  (10)
	StmtE -> P string ';'                              (11)
	StmtE -> R string ';'                              (12)
	StmtE -> W int D Stmts X                           (13)
	StmtE -> W ID D Stmts X                            (14)
	StmtE -> I int T Stmts E Stmts J                   (15)
	StmtE -> I ID T Stmts E Stmts J                    (16)
	StmtE -> I int T Stmts J                           (17)
	StmtE -> I ID T Stmts J                            (18)
	StmtE -> '{' Stmts '}'                             (19)
	DecE -> V ID ':' TyI ';'                           (20)
	DecE -> V ID ':' TyF ';'                           (21)
	Exp -> Exp '+' Term                                (22)
	Exp -> Exp '-' Term                                (23)
	Exp -> Term                                        (24)
	Term -> Term '*' Factor                            (25)
	Term -> Term '/' Factor                            (26)
	Term -> Factor                                     (27)
	Factor -> int                                      (28)
	Factor -> float                                    (29)
	Factor -> '-' int                                  (30)
	Factor -> '-' float                                (31)
	Factor -> ID                                       (32)
	Factor -> '(' Exp ')'                              (33)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	V              { T_Variable }
	':'            { T_Declaration }
	'='            { T_Assignment }
	';'            { T_Termination }
	'{'            { T_LBrace }
	'}'            { T_RBrace }
	'('            { T_LParen }
	')'            { T_RParen }
	P              { T_Print }
	R              { T_Read }
	'+'            { T_Add }
	'-'            { T_Subtract }
	'*'            { T_Multiply }
	'/'            { T_Divide }
	TyI            { T_TypeInt }
	TyF            { T_TypeFloat }
	I              { T_If }
	T              { T_Then }
	E              { T_Else }
	J              { T_EndIf }
	W              { T_While }
	D              { T_Do }
	X              { T_Done }
	ID             { T_Identifier $$ }
	int            { T_Int $$ }
	float          { T_Float $$ }
	string         { T_String $$ }
	S_Error        { S_Error $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Prg             rule  1
	Decs            rules 2, 3, 4
	Stmts           rules 5, 6, 7
	StmtE           rules 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
	DecE            rules 20, 21
	Exp             rules 22, 23, 24
	Term            rules 25, 26, 27
	Factor          rules 28, 29, 30, 31, 32, 33

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	V              shift, and enter state 4
	';'            shift, and enter state 5

	Prg            goto state 6
	Decs           goto state 2
	DecE           goto state 3

State 1


	V              shift, and enter state 4
	';'            shift, and enter state 5

	Decs           goto state 2
	DecE           goto state 3

State 2

	Prg -> Decs . Stmts                                 (rule 1)
	Decs -> Decs . DecE                                 (rule 2)

	V              shift, and enter state 4
	';'            shift, and enter state 11
	'{'            shift, and enter state 12
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	W              shift, and enter state 16
	ID             shift, and enter state 17

	Stmts          goto state 8
	StmtE          goto state 9
	DecE           goto state 10

State 3

	Decs -> DecE .                                      (rule 3)

	V              reduce using rule 3
	';'            reduce using rule 3
	'{'            reduce using rule 3
	P              reduce using rule 3
	R              reduce using rule 3
	I              reduce using rule 3
	W              reduce using rule 3
	ID             reduce using rule 3


State 4

	DecE -> V . ID ':' TyI ';'                          (rule 20)
	DecE -> V . ID ':' TyF ';'                          (rule 21)

	ID             shift, and enter state 7


State 5

	Decs -> ';' .                                       (rule 4)

	V              reduce using rule 4
	';'            reduce using rule 4
	'{'            reduce using rule 4
	P              reduce using rule 4
	R              reduce using rule 4
	I              reduce using rule 4
	W              reduce using rule 4
	ID             reduce using rule 4


State 6

	%start_parse -> Prg .                               (rule 0)

	%eof           accept


State 7

	DecE -> V ID . ':' TyI ';'                          (rule 20)
	DecE -> V ID . ':' TyF ';'                          (rule 21)

	':'            shift, and enter state 29


State 8

	Prg -> Decs Stmts .                                 (rule 1)
	Stmts -> Stmts . StmtE                              (rule 5)

	'{'            shift, and enter state 12
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	W              shift, and enter state 16
	ID             shift, and enter state 17
	%eof           reduce using rule 1

	StmtE          goto state 28

State 9

	Stmts -> StmtE .                                    (rule 6)

	'{'            reduce using rule 6
	'}'            reduce using rule 6
	P              reduce using rule 6
	R              reduce using rule 6
	I              reduce using rule 6
	E              reduce using rule 6
	J              reduce using rule 6
	W              reduce using rule 6
	X              reduce using rule 6
	ID             reduce using rule 6
	%eof           reduce using rule 6


State 10

	Decs -> Decs DecE .                                 (rule 2)

	V              reduce using rule 2
	';'            reduce using rule 2
	'{'            reduce using rule 2
	P              reduce using rule 2
	R              reduce using rule 2
	I              reduce using rule 2
	W              reduce using rule 2
	ID             reduce using rule 2


State 11

	Stmts -> ';' .                                      (rule 7)

	'{'            reduce using rule 7
	'}'            reduce using rule 7
	P              reduce using rule 7
	R              reduce using rule 7
	I              reduce using rule 7
	E              reduce using rule 7
	J              reduce using rule 7
	W              reduce using rule 7
	X              reduce using rule 7
	ID             reduce using rule 7
	%eof           reduce using rule 7


State 12

	StmtE -> '{' . Stmts '}'                            (rule 19)

	';'            shift, and enter state 11
	'{'            shift, and enter state 12
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	W              shift, and enter state 16
	ID             shift, and enter state 17

	Stmts          goto state 27
	StmtE          goto state 9

State 13

	StmtE -> P . ID ';'                                 (rule 9)
	StmtE -> P . string ';'                             (rule 11)

	ID             shift, and enter state 25
	string         shift, and enter state 26


State 14

	StmtE -> R . ID ';'                                 (rule 10)
	StmtE -> R . string ';'                             (rule 12)

	ID             shift, and enter state 23
	string         shift, and enter state 24


State 15

	StmtE -> I . int T Stmts E Stmts J                  (rule 15)
	StmtE -> I . ID T Stmts E Stmts J                   (rule 16)
	StmtE -> I . int T Stmts J                          (rule 17)
	StmtE -> I . ID T Stmts J                           (rule 18)

	ID             shift, and enter state 21
	int            shift, and enter state 22


State 16

	StmtE -> W . int D Stmts X                          (rule 13)
	StmtE -> W . ID D Stmts X                           (rule 14)

	ID             shift, and enter state 19
	int            shift, and enter state 20


State 17

	StmtE -> ID . '=' Exp ';'                           (rule 8)

	'='            shift, and enter state 18


State 18

	StmtE -> ID '=' . Exp ';'                           (rule 8)

	'('            shift, and enter state 44
	'-'            shift, and enter state 45
	ID             shift, and enter state 46
	int            shift, and enter state 47
	float          shift, and enter state 48

	Exp            goto state 41
	Term           goto state 42
	Factor         goto state 43

State 19

	StmtE -> W ID . D Stmts X                           (rule 14)

	D              shift, and enter state 40


State 20

	StmtE -> W int . D Stmts X                          (rule 13)

	D              shift, and enter state 39


State 21

	StmtE -> I ID . T Stmts E Stmts J                   (rule 16)
	StmtE -> I ID . T Stmts J                           (rule 18)

	T              shift, and enter state 38


State 22

	StmtE -> I int . T Stmts E Stmts J                  (rule 15)
	StmtE -> I int . T Stmts J                          (rule 17)

	T              shift, and enter state 37


State 23

	StmtE -> R ID . ';'                                 (rule 10)

	';'            shift, and enter state 36


State 24

	StmtE -> R string . ';'                             (rule 12)

	';'            shift, and enter state 35


State 25

	StmtE -> P ID . ';'                                 (rule 9)

	';'            shift, and enter state 34


State 26

	StmtE -> P string . ';'                             (rule 11)

	';'            shift, and enter state 33


State 27

	Stmts -> Stmts . StmtE                              (rule 5)
	StmtE -> '{' Stmts . '}'                            (rule 19)

	'{'            shift, and enter state 12
	'}'            shift, and enter state 32
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	W              shift, and enter state 16
	ID             shift, and enter state 17

	StmtE          goto state 28

State 28

	Stmts -> Stmts StmtE .                              (rule 5)

	'{'            reduce using rule 5
	'}'            reduce using rule 5
	P              reduce using rule 5
	R              reduce using rule 5
	I              reduce using rule 5
	E              reduce using rule 5
	J              reduce using rule 5
	W              reduce using rule 5
	X              reduce using rule 5
	ID             reduce using rule 5
	%eof           reduce using rule 5


State 29

	DecE -> V ID ':' . TyI ';'                          (rule 20)
	DecE -> V ID ':' . TyF ';'                          (rule 21)

	TyI            shift, and enter state 30
	TyF            shift, and enter state 31


State 30

	DecE -> V ID ':' TyI . ';'                          (rule 20)

	';'            shift, and enter state 62


State 31

	DecE -> V ID ':' TyF . ';'                          (rule 21)

	';'            shift, and enter state 61


State 32

	StmtE -> '{' Stmts '}' .                            (rule 19)

	'{'            reduce using rule 19
	'}'            reduce using rule 19
	P              reduce using rule 19
	R              reduce using rule 19
	I              reduce using rule 19
	E              reduce using rule 19
	J              reduce using rule 19
	W              reduce using rule 19
	X              reduce using rule 19
	ID             reduce using rule 19
	%eof           reduce using rule 19


State 33

	StmtE -> P string ';' .                             (rule 11)

	'{'            reduce using rule 11
	'}'            reduce using rule 11
	P              reduce using rule 11
	R              reduce using rule 11
	I              reduce using rule 11
	E              reduce using rule 11
	J              reduce using rule 11
	W              reduce using rule 11
	X              reduce using rule 11
	ID             reduce using rule 11
	%eof           reduce using rule 11


State 34

	StmtE -> P ID ';' .                                 (rule 9)

	'{'            reduce using rule 9
	'}'            reduce using rule 9
	P              reduce using rule 9
	R              reduce using rule 9
	I              reduce using rule 9
	E              reduce using rule 9
	J              reduce using rule 9
	W              reduce using rule 9
	X              reduce using rule 9
	ID             reduce using rule 9
	%eof           reduce using rule 9


State 35

	StmtE -> R string ';' .                             (rule 12)

	'{'            reduce using rule 12
	'}'            reduce using rule 12
	P              reduce using rule 12
	R              reduce using rule 12
	I              reduce using rule 12
	E              reduce using rule 12
	J              reduce using rule 12
	W              reduce using rule 12
	X              reduce using rule 12
	ID             reduce using rule 12
	%eof           reduce using rule 12


State 36

	StmtE -> R ID ';' .                                 (rule 10)

	'{'            reduce using rule 10
	'}'            reduce using rule 10
	P              reduce using rule 10
	R              reduce using rule 10
	I              reduce using rule 10
	E              reduce using rule 10
	J              reduce using rule 10
	W              reduce using rule 10
	X              reduce using rule 10
	ID             reduce using rule 10
	%eof           reduce using rule 10


State 37

	StmtE -> I int T . Stmts E Stmts J                  (rule 15)
	StmtE -> I int T . Stmts J                          (rule 17)

	';'            shift, and enter state 11
	'{'            shift, and enter state 12
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	W              shift, and enter state 16
	ID             shift, and enter state 17

	Stmts          goto state 60
	StmtE          goto state 9

State 38

	StmtE -> I ID T . Stmts E Stmts J                   (rule 16)
	StmtE -> I ID T . Stmts J                           (rule 18)

	';'            shift, and enter state 11
	'{'            shift, and enter state 12
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	W              shift, and enter state 16
	ID             shift, and enter state 17

	Stmts          goto state 59
	StmtE          goto state 9

State 39

	StmtE -> W int D . Stmts X                          (rule 13)

	';'            shift, and enter state 11
	'{'            shift, and enter state 12
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	W              shift, and enter state 16
	ID             shift, and enter state 17

	Stmts          goto state 58
	StmtE          goto state 9

State 40

	StmtE -> W ID D . Stmts X                           (rule 14)

	';'            shift, and enter state 11
	'{'            shift, and enter state 12
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	W              shift, and enter state 16
	ID             shift, and enter state 17

	Stmts          goto state 57
	StmtE          goto state 9

State 41

	StmtE -> ID '=' Exp . ';'                           (rule 8)
	Exp -> Exp . '+' Term                               (rule 22)
	Exp -> Exp . '-' Term                               (rule 23)

	';'            shift, and enter state 54
	'+'            shift, and enter state 55
	'-'            shift, and enter state 56


State 42

	Exp -> Term .                                       (rule 24)
	Term -> Term . '*' Factor                           (rule 25)
	Term -> Term . '/' Factor                           (rule 26)

	';'            reduce using rule 24
	')'            reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            shift, and enter state 52
	'/'            shift, and enter state 53


State 43

	Term -> Factor .                                    (rule 27)

	';'            reduce using rule 27
	')'            reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27


State 44

	Factor -> '(' . Exp ')'                             (rule 33)

	'('            shift, and enter state 44
	'-'            shift, and enter state 45
	ID             shift, and enter state 46
	int            shift, and enter state 47
	float          shift, and enter state 48

	Exp            goto state 51
	Term           goto state 42
	Factor         goto state 43

State 45

	Factor -> '-' . int                                 (rule 30)
	Factor -> '-' . float                               (rule 31)

	int            shift, and enter state 49
	float          shift, and enter state 50


State 46

	Factor -> ID .                                      (rule 32)

	';'            reduce using rule 32
	')'            reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            reduce using rule 32
	'/'            reduce using rule 32


State 47

	Factor -> int .                                     (rule 28)

	';'            reduce using rule 28
	')'            reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28


State 48

	Factor -> float .                                   (rule 29)

	';'            reduce using rule 29
	')'            reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29


State 49

	Factor -> '-' int .                                 (rule 30)

	';'            reduce using rule 30
	')'            reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            reduce using rule 30
	'/'            reduce using rule 30


State 50

	Factor -> '-' float .                               (rule 31)

	';'            reduce using rule 31
	')'            reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            reduce using rule 31
	'/'            reduce using rule 31


State 51

	Exp -> Exp . '+' Term                               (rule 22)
	Exp -> Exp . '-' Term                               (rule 23)
	Factor -> '(' Exp . ')'                             (rule 33)

	')'            shift, and enter state 73
	'+'            shift, and enter state 55
	'-'            shift, and enter state 56


State 52

	Term -> Term '*' . Factor                           (rule 25)

	'('            shift, and enter state 44
	'-'            shift, and enter state 45
	ID             shift, and enter state 46
	int            shift, and enter state 47
	float          shift, and enter state 48

	Factor         goto state 72

State 53

	Term -> Term '/' . Factor                           (rule 26)

	'('            shift, and enter state 44
	'-'            shift, and enter state 45
	ID             shift, and enter state 46
	int            shift, and enter state 47
	float          shift, and enter state 48

	Factor         goto state 71

State 54

	StmtE -> ID '=' Exp ';' .                           (rule 8)

	'{'            reduce using rule 8
	'}'            reduce using rule 8
	P              reduce using rule 8
	R              reduce using rule 8
	I              reduce using rule 8
	E              reduce using rule 8
	J              reduce using rule 8
	W              reduce using rule 8
	X              reduce using rule 8
	ID             reduce using rule 8
	%eof           reduce using rule 8


State 55

	Exp -> Exp '+' . Term                               (rule 22)

	'('            shift, and enter state 44
	'-'            shift, and enter state 45
	ID             shift, and enter state 46
	int            shift, and enter state 47
	float          shift, and enter state 48

	Term           goto state 70
	Factor         goto state 43

State 56

	Exp -> Exp '-' . Term                               (rule 23)

	'('            shift, and enter state 44
	'-'            shift, and enter state 45
	ID             shift, and enter state 46
	int            shift, and enter state 47
	float          shift, and enter state 48

	Term           goto state 69
	Factor         goto state 43

State 57

	Stmts -> Stmts . StmtE                              (rule 5)
	StmtE -> W ID D Stmts . X                           (rule 14)

	'{'            shift, and enter state 12
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	W              shift, and enter state 16
	X              shift, and enter state 68
	ID             shift, and enter state 17

	StmtE          goto state 28

State 58

	Stmts -> Stmts . StmtE                              (rule 5)
	StmtE -> W int D Stmts . X                          (rule 13)

	'{'            shift, and enter state 12
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	W              shift, and enter state 16
	X              shift, and enter state 67
	ID             shift, and enter state 17

	StmtE          goto state 28

State 59

	Stmts -> Stmts . StmtE                              (rule 5)
	StmtE -> I ID T Stmts . E Stmts J                   (rule 16)
	StmtE -> I ID T Stmts . J                           (rule 18)

	'{'            shift, and enter state 12
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	E              shift, and enter state 65
	J              shift, and enter state 66
	W              shift, and enter state 16
	ID             shift, and enter state 17

	StmtE          goto state 28

State 60

	Stmts -> Stmts . StmtE                              (rule 5)
	StmtE -> I int T Stmts . E Stmts J                  (rule 15)
	StmtE -> I int T Stmts . J                          (rule 17)

	'{'            shift, and enter state 12
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	E              shift, and enter state 63
	J              shift, and enter state 64
	W              shift, and enter state 16
	ID             shift, and enter state 17

	StmtE          goto state 28

State 61

	DecE -> V ID ':' TyF ';' .                          (rule 21)

	V              reduce using rule 21
	';'            reduce using rule 21
	'{'            reduce using rule 21
	P              reduce using rule 21
	R              reduce using rule 21
	I              reduce using rule 21
	W              reduce using rule 21
	ID             reduce using rule 21


State 62

	DecE -> V ID ':' TyI ';' .                          (rule 20)

	V              reduce using rule 20
	';'            reduce using rule 20
	'{'            reduce using rule 20
	P              reduce using rule 20
	R              reduce using rule 20
	I              reduce using rule 20
	W              reduce using rule 20
	ID             reduce using rule 20


State 63

	StmtE -> I int T Stmts E . Stmts J                  (rule 15)

	';'            shift, and enter state 11
	'{'            shift, and enter state 12
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	W              shift, and enter state 16
	ID             shift, and enter state 17

	Stmts          goto state 75
	StmtE          goto state 9

State 64

	StmtE -> I int T Stmts J .                          (rule 17)

	'{'            reduce using rule 17
	'}'            reduce using rule 17
	P              reduce using rule 17
	R              reduce using rule 17
	I              reduce using rule 17
	E              reduce using rule 17
	J              reduce using rule 17
	W              reduce using rule 17
	X              reduce using rule 17
	ID             reduce using rule 17
	%eof           reduce using rule 17


State 65

	StmtE -> I ID T Stmts E . Stmts J                   (rule 16)

	';'            shift, and enter state 11
	'{'            shift, and enter state 12
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	W              shift, and enter state 16
	ID             shift, and enter state 17

	Stmts          goto state 74
	StmtE          goto state 9

State 66

	StmtE -> I ID T Stmts J .                           (rule 18)

	'{'            reduce using rule 18
	'}'            reduce using rule 18
	P              reduce using rule 18
	R              reduce using rule 18
	I              reduce using rule 18
	E              reduce using rule 18
	J              reduce using rule 18
	W              reduce using rule 18
	X              reduce using rule 18
	ID             reduce using rule 18
	%eof           reduce using rule 18


State 67

	StmtE -> W int D Stmts X .                          (rule 13)

	'{'            reduce using rule 13
	'}'            reduce using rule 13
	P              reduce using rule 13
	R              reduce using rule 13
	I              reduce using rule 13
	E              reduce using rule 13
	J              reduce using rule 13
	W              reduce using rule 13
	X              reduce using rule 13
	ID             reduce using rule 13
	%eof           reduce using rule 13


State 68

	StmtE -> W ID D Stmts X .                           (rule 14)

	'{'            reduce using rule 14
	'}'            reduce using rule 14
	P              reduce using rule 14
	R              reduce using rule 14
	I              reduce using rule 14
	E              reduce using rule 14
	J              reduce using rule 14
	W              reduce using rule 14
	X              reduce using rule 14
	ID             reduce using rule 14
	%eof           reduce using rule 14


State 69

	Exp -> Exp '-' Term .                               (rule 23)
	Term -> Term . '*' Factor                           (rule 25)
	Term -> Term . '/' Factor                           (rule 26)

	';'            reduce using rule 23
	')'            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            shift, and enter state 52
	'/'            shift, and enter state 53


State 70

	Exp -> Exp '+' Term .                               (rule 22)
	Term -> Term . '*' Factor                           (rule 25)
	Term -> Term . '/' Factor                           (rule 26)

	';'            reduce using rule 22
	')'            reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            shift, and enter state 52
	'/'            shift, and enter state 53


State 71

	Term -> Term '/' Factor .                           (rule 26)

	';'            reduce using rule 26
	')'            reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26


State 72

	Term -> Term '*' Factor .                           (rule 25)

	';'            reduce using rule 25
	')'            reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25


State 73

	Factor -> '(' Exp ')' .                             (rule 33)

	';'            reduce using rule 33
	')'            reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	'*'            reduce using rule 33
	'/'            reduce using rule 33


State 74

	Stmts -> Stmts . StmtE                              (rule 5)
	StmtE -> I ID T Stmts E Stmts . J                   (rule 16)

	'{'            shift, and enter state 12
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	J              shift, and enter state 77
	W              shift, and enter state 16
	ID             shift, and enter state 17

	StmtE          goto state 28

State 75

	Stmts -> Stmts . StmtE                              (rule 5)
	StmtE -> I int T Stmts E Stmts . J                  (rule 15)

	'{'            shift, and enter state 12
	P              shift, and enter state 13
	R              shift, and enter state 14
	I              shift, and enter state 15
	J              shift, and enter state 76
	W              shift, and enter state 16
	ID             shift, and enter state 17

	StmtE          goto state 28

State 76

	StmtE -> I int T Stmts E Stmts J .                  (rule 15)

	'{'            reduce using rule 15
	'}'            reduce using rule 15
	P              reduce using rule 15
	R              reduce using rule 15
	I              reduce using rule 15
	E              reduce using rule 15
	J              reduce using rule 15
	W              reduce using rule 15
	X              reduce using rule 15
	ID             reduce using rule 15
	%eof           reduce using rule 15


State 77

	StmtE -> I ID T Stmts E Stmts J .                   (rule 16)

	'{'            reduce using rule 16
	'}'            reduce using rule 16
	P              reduce using rule 16
	R              reduce using rule 16
	I              reduce using rule 16
	E              reduce using rule 16
	J              reduce using rule 16
	W              reduce using rule 16
	X              reduce using rule 16
	ID             reduce using rule 16
	%eof           reduce using rule 16


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 34
Number of terminals: 28
Number of non-terminals: 9
Number of states: 78
