-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Parser.y
-----------------------------------------------------------------------------


terminal S_Error is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Prgrm                              (0)
	Prgrm -> Decs Stmts                                (1)
	Decs -> DecE Decs                                  (2)
	Decs ->                                            (3)
	Stmts -> StmtE Stmts                               (4)
	Stmts ->                                           (5)
	StmtE -> ID '=' Exp ';'                            (6)
	StmtE -> P ID ';'                                  (7)
	StmtE -> R ID ';'                                  (8)
	StmtE -> P string ';'                              (9)
	StmtE -> W int D Stmts X                           (10)
	StmtE -> W ID D Stmts X                            (11)
	StmtE -> I int T Stmts E Stmts J                   (12)
	StmtE -> I ID T Stmts E Stmts J                    (13)
	StmtE -> I int T Stmts J                           (14)
	StmtE -> I ID T Stmts J                            (15)
	DecE -> V ID ':' TyI ';'                           (16)
	DecE -> V ID ':' TyF ';'                           (17)
	DecE -> V ID ':' TyS ';'                           (18)
	Exp -> Exp '+' Term                                (19)
	Exp -> Exp '-' Term                                (20)
	Exp -> Term                                        (21)
	Term -> Term '*' Factor                            (22)
	Term -> Term '/' Factor                            (23)
	Term -> Factor                                     (24)
	Factor -> int                                      (25)
	Factor -> float                                    (26)
	Factor -> string                                   (27)
	Factor -> '-' int                                  (28)
	Factor -> '-' float                                (29)
	Factor -> '-' string                               (30)
	Factor -> ID                                       (31)
	Factor -> '(' Exp ')'                              (32)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	V              { T_Variable }
	':'            { T_Declaration }
	'='            { T_Assignment }
	';'            { T_Termination }
	'('            { T_LParen }
	')'            { T_RParen }
	P              { T_Print }
	R              { T_Read }
	'+'            { T_Add }
	'-'            { T_Subtract }
	'*'            { T_Multiply }
	'/'            { T_Divide }
	TyI            { T_TypeInt }
	TyF            { T_TypeFloat }
	TyS            { T_TypeString }
	I              { T_If }
	T              { T_Then }
	E              { T_Else }
	J              { T_EndIf }
	W              { T_While }
	D              { T_Do }
	X              { T_Done }
	ID             { T_Identifier $$ }
	int            { T_Int $$ }
	float          { T_Float $$ }
	string         { T_String $$ }
	S_Error        { S_Error $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Prgrm           rule  1
	Decs            rules 2, 3
	Stmts           rules 4, 5
	StmtE           rules 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	DecE            rules 16, 17, 18
	Exp             rules 19, 20, 21
	Term            rules 22, 23, 24
	Factor          rules 25, 26, 27, 28, 29, 30, 31, 32

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	V              shift, and enter state 4
	P              reduce using rule 3
	R              reduce using rule 3
	I              reduce using rule 3
	W              reduce using rule 3
	ID             reduce using rule 3
	%eof           reduce using rule 3

	Prgrm          goto state 5
	Decs           goto state 2
	DecE           goto state 3

State 1


	V              shift, and enter state 4

	Decs           goto state 2
	DecE           goto state 3

State 2

	Prgrm -> Decs . Stmts                               (rule 1)

	P              shift, and enter state 10
	R              shift, and enter state 11
	I              shift, and enter state 12
	W              shift, and enter state 13
	ID             shift, and enter state 14
	%eof           reduce using rule 5

	Stmts          goto state 8
	StmtE          goto state 9

State 3

	Decs -> DecE . Decs                                 (rule 2)

	V              shift, and enter state 4
	P              reduce using rule 3
	R              reduce using rule 3
	I              reduce using rule 3
	W              reduce using rule 3
	ID             reduce using rule 3
	%eof           reduce using rule 3

	Decs           goto state 7
	DecE           goto state 3

State 4

	DecE -> V . ID ':' TyI ';'                          (rule 16)
	DecE -> V . ID ':' TyF ';'                          (rule 17)
	DecE -> V . ID ':' TyS ';'                          (rule 18)

	ID             shift, and enter state 6


State 5

	%start_parse -> Prgrm .                             (rule 0)

	%eof           accept


State 6

	DecE -> V ID . ':' TyI ';'                          (rule 16)
	DecE -> V ID . ':' TyF ';'                          (rule 17)
	DecE -> V ID . ':' TyS ';'                          (rule 18)

	':'            shift, and enter state 24


State 7

	Decs -> DecE Decs .                                 (rule 2)

	P              reduce using rule 2
	R              reduce using rule 2
	I              reduce using rule 2
	W              reduce using rule 2
	ID             reduce using rule 2
	%eof           reduce using rule 2


State 8

	Prgrm -> Decs Stmts .                               (rule 1)

	%eof           reduce using rule 1


State 9

	Stmts -> StmtE . Stmts                              (rule 4)

	P              shift, and enter state 10
	R              shift, and enter state 11
	I              shift, and enter state 12
	E              reduce using rule 5
	J              reduce using rule 5
	W              shift, and enter state 13
	X              reduce using rule 5
	ID             shift, and enter state 14
	%eof           reduce using rule 5

	Stmts          goto state 23
	StmtE          goto state 9

State 10

	StmtE -> P . ID ';'                                 (rule 7)
	StmtE -> P . string ';'                             (rule 9)

	ID             shift, and enter state 21
	string         shift, and enter state 22


State 11

	StmtE -> R . ID ';'                                 (rule 8)

	ID             shift, and enter state 20


State 12

	StmtE -> I . int T Stmts E Stmts J                  (rule 12)
	StmtE -> I . ID T Stmts E Stmts J                   (rule 13)
	StmtE -> I . int T Stmts J                          (rule 14)
	StmtE -> I . ID T Stmts J                           (rule 15)

	ID             shift, and enter state 18
	int            shift, and enter state 19


State 13

	StmtE -> W . int D Stmts X                          (rule 10)
	StmtE -> W . ID D Stmts X                           (rule 11)

	ID             shift, and enter state 16
	int            shift, and enter state 17


State 14

	StmtE -> ID . '=' Exp ';'                           (rule 6)

	'='            shift, and enter state 15


State 15

	StmtE -> ID '=' . Exp ';'                           (rule 6)

	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	ID             shift, and enter state 40
	int            shift, and enter state 41
	float          shift, and enter state 42
	string         shift, and enter state 43

	Exp            goto state 35
	Term           goto state 36
	Factor         goto state 37

State 16

	StmtE -> W ID . D Stmts X                           (rule 11)

	D              shift, and enter state 34


State 17

	StmtE -> W int . D Stmts X                          (rule 10)

	D              shift, and enter state 33


State 18

	StmtE -> I ID . T Stmts E Stmts J                   (rule 13)
	StmtE -> I ID . T Stmts J                           (rule 15)

	T              shift, and enter state 32


State 19

	StmtE -> I int . T Stmts E Stmts J                  (rule 12)
	StmtE -> I int . T Stmts J                          (rule 14)

	T              shift, and enter state 31


State 20

	StmtE -> R ID . ';'                                 (rule 8)

	';'            shift, and enter state 30


State 21

	StmtE -> P ID . ';'                                 (rule 7)

	';'            shift, and enter state 29


State 22

	StmtE -> P string . ';'                             (rule 9)

	';'            shift, and enter state 28


State 23

	Stmts -> StmtE Stmts .                              (rule 4)

	E              reduce using rule 4
	J              reduce using rule 4
	X              reduce using rule 4
	%eof           reduce using rule 4


State 24

	DecE -> V ID ':' . TyI ';'                          (rule 16)
	DecE -> V ID ':' . TyF ';'                          (rule 17)
	DecE -> V ID ':' . TyS ';'                          (rule 18)

	TyI            shift, and enter state 25
	TyF            shift, and enter state 26
	TyS            shift, and enter state 27


State 25

	DecE -> V ID ':' TyI . ';'                          (rule 16)

	';'            shift, and enter state 59


State 26

	DecE -> V ID ':' TyF . ';'                          (rule 17)

	';'            shift, and enter state 58


State 27

	DecE -> V ID ':' TyS . ';'                          (rule 18)

	';'            shift, and enter state 57


State 28

	StmtE -> P string ';' .                             (rule 9)

	P              reduce using rule 9
	R              reduce using rule 9
	I              reduce using rule 9
	E              reduce using rule 9
	J              reduce using rule 9
	W              reduce using rule 9
	X              reduce using rule 9
	ID             reduce using rule 9
	%eof           reduce using rule 9


State 29

	StmtE -> P ID ';' .                                 (rule 7)

	P              reduce using rule 7
	R              reduce using rule 7
	I              reduce using rule 7
	E              reduce using rule 7
	J              reduce using rule 7
	W              reduce using rule 7
	X              reduce using rule 7
	ID             reduce using rule 7
	%eof           reduce using rule 7


State 30

	StmtE -> R ID ';' .                                 (rule 8)

	P              reduce using rule 8
	R              reduce using rule 8
	I              reduce using rule 8
	E              reduce using rule 8
	J              reduce using rule 8
	W              reduce using rule 8
	X              reduce using rule 8
	ID             reduce using rule 8
	%eof           reduce using rule 8


State 31

	StmtE -> I int T . Stmts E Stmts J                  (rule 12)
	StmtE -> I int T . Stmts J                          (rule 14)

	P              shift, and enter state 10
	R              shift, and enter state 11
	I              shift, and enter state 12
	E              reduce using rule 5
	J              reduce using rule 5
	W              shift, and enter state 13
	ID             shift, and enter state 14

	Stmts          goto state 56
	StmtE          goto state 9

State 32

	StmtE -> I ID T . Stmts E Stmts J                   (rule 13)
	StmtE -> I ID T . Stmts J                           (rule 15)

	P              shift, and enter state 10
	R              shift, and enter state 11
	I              shift, and enter state 12
	E              reduce using rule 5
	J              reduce using rule 5
	W              shift, and enter state 13
	ID             shift, and enter state 14

	Stmts          goto state 55
	StmtE          goto state 9

State 33

	StmtE -> W int D . Stmts X                          (rule 10)

	P              shift, and enter state 10
	R              shift, and enter state 11
	I              shift, and enter state 12
	W              shift, and enter state 13
	X              reduce using rule 5
	ID             shift, and enter state 14

	Stmts          goto state 54
	StmtE          goto state 9

State 34

	StmtE -> W ID D . Stmts X                           (rule 11)

	P              shift, and enter state 10
	R              shift, and enter state 11
	I              shift, and enter state 12
	W              shift, and enter state 13
	X              reduce using rule 5
	ID             shift, and enter state 14

	Stmts          goto state 53
	StmtE          goto state 9

State 35

	StmtE -> ID '=' Exp . ';'                           (rule 6)
	Exp -> Exp . '+' Term                               (rule 19)
	Exp -> Exp . '-' Term                               (rule 20)

	';'            shift, and enter state 50
	'+'            shift, and enter state 51
	'-'            shift, and enter state 52


State 36

	Exp -> Term .                                       (rule 21)
	Term -> Term . '*' Factor                           (rule 22)
	Term -> Term . '/' Factor                           (rule 23)

	';'            reduce using rule 21
	')'            reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            shift, and enter state 48
	'/'            shift, and enter state 49


State 37

	Term -> Factor .                                    (rule 24)

	';'            reduce using rule 24
	')'            reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24


State 38

	Factor -> '(' . Exp ')'                             (rule 32)

	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	ID             shift, and enter state 40
	int            shift, and enter state 41
	float          shift, and enter state 42
	string         shift, and enter state 43

	Exp            goto state 47
	Term           goto state 36
	Factor         goto state 37

State 39

	Factor -> '-' . int                                 (rule 28)
	Factor -> '-' . float                               (rule 29)
	Factor -> '-' . string                              (rule 30)

	int            shift, and enter state 44
	float          shift, and enter state 45
	string         shift, and enter state 46


State 40

	Factor -> ID .                                      (rule 31)

	';'            reduce using rule 31
	')'            reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            reduce using rule 31
	'/'            reduce using rule 31


State 41

	Factor -> int .                                     (rule 25)

	';'            reduce using rule 25
	')'            reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25


State 42

	Factor -> float .                                   (rule 26)

	';'            reduce using rule 26
	')'            reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26


State 43

	Factor -> string .                                  (rule 27)

	';'            reduce using rule 27
	')'            reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27


State 44

	Factor -> '-' int .                                 (rule 28)

	';'            reduce using rule 28
	')'            reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28


State 45

	Factor -> '-' float .                               (rule 29)

	';'            reduce using rule 29
	')'            reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29


State 46

	Factor -> '-' string .                              (rule 30)

	';'            reduce using rule 30
	')'            reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            reduce using rule 30
	'/'            reduce using rule 30


State 47

	Exp -> Exp . '+' Term                               (rule 19)
	Exp -> Exp . '-' Term                               (rule 20)
	Factor -> '(' Exp . ')'                             (rule 32)

	')'            shift, and enter state 70
	'+'            shift, and enter state 51
	'-'            shift, and enter state 52


State 48

	Term -> Term '*' . Factor                           (rule 22)

	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	ID             shift, and enter state 40
	int            shift, and enter state 41
	float          shift, and enter state 42
	string         shift, and enter state 43

	Factor         goto state 69

State 49

	Term -> Term '/' . Factor                           (rule 23)

	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	ID             shift, and enter state 40
	int            shift, and enter state 41
	float          shift, and enter state 42
	string         shift, and enter state 43

	Factor         goto state 68

State 50

	StmtE -> ID '=' Exp ';' .                           (rule 6)

	P              reduce using rule 6
	R              reduce using rule 6
	I              reduce using rule 6
	E              reduce using rule 6
	J              reduce using rule 6
	W              reduce using rule 6
	X              reduce using rule 6
	ID             reduce using rule 6
	%eof           reduce using rule 6


State 51

	Exp -> Exp '+' . Term                               (rule 19)

	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	ID             shift, and enter state 40
	int            shift, and enter state 41
	float          shift, and enter state 42
	string         shift, and enter state 43

	Term           goto state 67
	Factor         goto state 37

State 52

	Exp -> Exp '-' . Term                               (rule 20)

	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	ID             shift, and enter state 40
	int            shift, and enter state 41
	float          shift, and enter state 42
	string         shift, and enter state 43

	Term           goto state 66
	Factor         goto state 37

State 53

	StmtE -> W ID D Stmts . X                           (rule 11)

	X              shift, and enter state 65


State 54

	StmtE -> W int D Stmts . X                          (rule 10)

	X              shift, and enter state 64


State 55

	StmtE -> I ID T Stmts . E Stmts J                   (rule 13)
	StmtE -> I ID T Stmts . J                           (rule 15)

	E              shift, and enter state 62
	J              shift, and enter state 63


State 56

	StmtE -> I int T Stmts . E Stmts J                  (rule 12)
	StmtE -> I int T Stmts . J                          (rule 14)

	E              shift, and enter state 60
	J              shift, and enter state 61


State 57

	DecE -> V ID ':' TyS ';' .                          (rule 18)

	V              reduce using rule 18
	P              reduce using rule 18
	R              reduce using rule 18
	I              reduce using rule 18
	W              reduce using rule 18
	ID             reduce using rule 18
	%eof           reduce using rule 18


State 58

	DecE -> V ID ':' TyF ';' .                          (rule 17)

	V              reduce using rule 17
	P              reduce using rule 17
	R              reduce using rule 17
	I              reduce using rule 17
	W              reduce using rule 17
	ID             reduce using rule 17
	%eof           reduce using rule 17


State 59

	DecE -> V ID ':' TyI ';' .                          (rule 16)

	V              reduce using rule 16
	P              reduce using rule 16
	R              reduce using rule 16
	I              reduce using rule 16
	W              reduce using rule 16
	ID             reduce using rule 16
	%eof           reduce using rule 16


State 60

	StmtE -> I int T Stmts E . Stmts J                  (rule 12)

	P              shift, and enter state 10
	R              shift, and enter state 11
	I              shift, and enter state 12
	J              reduce using rule 5
	W              shift, and enter state 13
	ID             shift, and enter state 14

	Stmts          goto state 72
	StmtE          goto state 9

State 61

	StmtE -> I int T Stmts J .                          (rule 14)

	P              reduce using rule 14
	R              reduce using rule 14
	I              reduce using rule 14
	E              reduce using rule 14
	J              reduce using rule 14
	W              reduce using rule 14
	X              reduce using rule 14
	ID             reduce using rule 14
	%eof           reduce using rule 14


State 62

	StmtE -> I ID T Stmts E . Stmts J                   (rule 13)

	P              shift, and enter state 10
	R              shift, and enter state 11
	I              shift, and enter state 12
	J              reduce using rule 5
	W              shift, and enter state 13
	ID             shift, and enter state 14

	Stmts          goto state 71
	StmtE          goto state 9

State 63

	StmtE -> I ID T Stmts J .                           (rule 15)

	P              reduce using rule 15
	R              reduce using rule 15
	I              reduce using rule 15
	E              reduce using rule 15
	J              reduce using rule 15
	W              reduce using rule 15
	X              reduce using rule 15
	ID             reduce using rule 15
	%eof           reduce using rule 15


State 64

	StmtE -> W int D Stmts X .                          (rule 10)

	P              reduce using rule 10
	R              reduce using rule 10
	I              reduce using rule 10
	E              reduce using rule 10
	J              reduce using rule 10
	W              reduce using rule 10
	X              reduce using rule 10
	ID             reduce using rule 10
	%eof           reduce using rule 10


State 65

	StmtE -> W ID D Stmts X .                           (rule 11)

	P              reduce using rule 11
	R              reduce using rule 11
	I              reduce using rule 11
	E              reduce using rule 11
	J              reduce using rule 11
	W              reduce using rule 11
	X              reduce using rule 11
	ID             reduce using rule 11
	%eof           reduce using rule 11


State 66

	Exp -> Exp '-' Term .                               (rule 20)
	Term -> Term . '*' Factor                           (rule 22)
	Term -> Term . '/' Factor                           (rule 23)

	';'            reduce using rule 20
	')'            reduce using rule 20
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            shift, and enter state 48
	'/'            shift, and enter state 49


State 67

	Exp -> Exp '+' Term .                               (rule 19)
	Term -> Term . '*' Factor                           (rule 22)
	Term -> Term . '/' Factor                           (rule 23)

	';'            reduce using rule 19
	')'            reduce using rule 19
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            shift, and enter state 48
	'/'            shift, and enter state 49


State 68

	Term -> Term '/' Factor .                           (rule 23)

	';'            reduce using rule 23
	')'            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23


State 69

	Term -> Term '*' Factor .                           (rule 22)

	';'            reduce using rule 22
	')'            reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            reduce using rule 22
	'/'            reduce using rule 22


State 70

	Factor -> '(' Exp ')' .                             (rule 32)

	';'            reduce using rule 32
	')'            reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            reduce using rule 32
	'/'            reduce using rule 32


State 71

	StmtE -> I ID T Stmts E Stmts . J                   (rule 13)

	J              shift, and enter state 74


State 72

	StmtE -> I int T Stmts E Stmts . J                  (rule 12)

	J              shift, and enter state 73


State 73

	StmtE -> I int T Stmts E Stmts J .                  (rule 12)

	P              reduce using rule 12
	R              reduce using rule 12
	I              reduce using rule 12
	E              reduce using rule 12
	J              reduce using rule 12
	W              reduce using rule 12
	X              reduce using rule 12
	ID             reduce using rule 12
	%eof           reduce using rule 12


State 74

	StmtE -> I ID T Stmts E Stmts J .                   (rule 13)

	P              reduce using rule 13
	R              reduce using rule 13
	I              reduce using rule 13
	E              reduce using rule 13
	J              reduce using rule 13
	W              reduce using rule 13
	X              reduce using rule 13
	ID             reduce using rule 13
	%eof           reduce using rule 13


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 33
Number of terminals: 27
Number of non-terminals: 9
Number of states: 75
